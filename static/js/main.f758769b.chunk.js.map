{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["intance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","viedoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrading","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f758769b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst intance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n})\r\n\r\nexport default intance;","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport './Row.css';\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl , isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl])\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars:{\r\n\r\n            autoplay:1,\r\n        },\r\n    };\r\n\r\n    const handleClick = (movie) => {\r\n        if (trailerUrl)\r\n        {\r\n            setTrailerUrl('');\r\n        }else {\r\n            movieTrailer(movie?.name || \"\" )\r\n            .then((url) => {\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get('v'));\r\n            })\r\n            .catch((error) => console.log(error));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {/* {serval row posters} */}\r\n\r\n                {movies.map(movie => (\r\n                    <img \r\n                    key={movie.id}\r\n                    onClick={() => handleClick(movie)} \r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />\r\n                ))}\r\n            </div>\r\n            {trailerUrl &&<YouTube viedoId={trailerUrl} opts={opts}/> }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row\r\n","const API_KEY = \"a755d75a9fcba1006f500c34fff2a91b\";\r\n\r\nconst requests = {\r\n    fetchTrading: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\nexport default requests;","import React, {useEffect, useState} from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests.js'\r\nimport './Banner.css';\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie( \r\n                request.data.results[\r\n                    Math.floor(Math.random() * (request.data.results.length -1)) \r\n                ]\r\n                );\r\n                return request;\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    console.log(movie);\r\n\r\n    function truncate(str,n) {\r\n        return str?.length > n ? str.substr(0, n-1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\" \r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                    )`,\r\n                backgroundPosition: \"center center\"\r\n            }}\r\n        > \r\n        <div className=\"banner__contents\">\r\n            {/* {title} */}\r\n            <h1 className=\"banner__title\">\r\n                {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner__buttons\">\r\n                <button className=\"banner__button\">Play</button>\r\n                <button className=\"banner__button\">My List</button>\r\n            </div>\r\n\r\n            <h1 className=\"banner__description\"> {truncate(movie?.overview, 150)} \r\n            </h1>\r\n\r\n            {/* {div > 2 buttons} */}\r\n            {/* description */}\r\n            </div>\r\n            <div className=\"banner--fadeBottom\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React ,{useEffect, useState} from 'react'\r\nimport './Nav.css';\r\n\r\nfunction Nav() {\r\n    \r\n    const [show,handleShow] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n       window.addEventListener(\"scroll\", () => {\r\n           if(window.scrollY > 100) {\r\n            handleShow(true);\r\n           }else handleShow(false);\r\n       });\r\n       return () => {\r\n           window.removeEventListener(\"scroll\");\r\n       };\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n                <img \r\n                className=\"nav_logo\"\r\n                src=\"https://logos-world.net/wp-content/uploads/2020/04/Netflix-Logo.png\"\r\n                alt=\"netflix logo\"/>\r\n\r\n<img \r\n                className=\"nav_avatar\"\r\n                src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/e70b1333850498.56ba69ac32ae3.png\"\r\n                alt=\"netflix logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import './App.css';\nimport Row from './Row';\nimport requests from './requests.js'\nimport Banner from \"./Banner.js\"\nimport Nav from \"./Nav.js\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals}\n      isLargeRow={true} />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrading}  />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Mowies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n  \n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}